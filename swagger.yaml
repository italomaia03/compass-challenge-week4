openapi: 3.0.3
info:
    title: Swagger Vet Clinic - OpenAPI 3.0
    description: |-
        This is a REST API performs CRUD operations with tutors and pets.
    contact:
        email: italo.maia.pb@compasso.com.br
    version: 1.0.0
externalDocs:
    description: Find out more about this API
    url: https://github.com/italomaia03/compass-challenge-week4
servers:
    - url: http://localhost:{port}/api/v1
      variables:
          port:
              default: "3000"
              description: Put the port of your choice in the designated camp.
tags:
    - name: Tutors
      description: Everything about tutors
    - name: Pets
      description: Everything about pets
paths:
    /tutor/{id}:
        put:
            tags:
                - Tutors
            summary: Update an existing tutor
            description: Update an existing tutor by Id
            operationId: updateTutor
            requestBody:
                description: Update an existent tutor in the database
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Tutor"
                required: true
            responses:
                "200":
                    description: Successful operation
                "400":
                    description: Bad Request
                "404":
                    description: Content not found
        parameters:
            - name: id
              in: path
              description: id of tutor to use
              required: true
              schema:
                  type: integer
              style: simple

        delete:
            tags:
                - Tutors
            summary: Delete an existing tutor
            description: Delete an existing tutor by Id
            operationId: deleteTutor
            parameters:
                - name: id
                  in: path
                  description: ID of tutor to use
                  required: true
                  schema:
                      type: integer
                  style: simple
            responses:
                "200":
                    description: Successful operation
                "400":
                    description: Bad Request
                "404":
                    description: Content not found
    /tutor:
        post:
            tags:
                - Tutors
            summary: Add a new tutor to the database
            description: Add a new tutor to the database
            operationId: createTutor
            requestBody:
                description: Create a new tutor in the database
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Tutor"
                required: true
            responses:
                "200":
                    description: Successful operation
                "400":
                    description: Bad Request
                "404":
                    description: Content not found

    /tutors:
        get:
            tags:
                - Tutors
            summary: Lists all tutors
            description: List all tutors in the database
            operationId: getTutors
            responses:
                "200":
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/TutorComplete"
                "404":
                    description: Content not found

    /pet/{tutorId}:
        post:
            tags:
                - Pets
            summary: Creates a new pet
            description: Creates a pet in the database and assigns it to a tutor
            operationId: createPet
            requestBody:
                description: Create a new tutor in the database
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Pet"
                required: true
            parameters:
                - name: tutorId
                  in: path
                  description: ID of tutor that receiver the pet
                  required: true
                  schema:
                      type: integer
                      format: int64
            responses:
                "200":
                    description: Successful operation
                "400":
                    description: Bad Request
                "404":
                    description: Content not found
    /pet/{petId}/tutor/{tutorId}:
        put:
            tags:
                - Pets
            summary: Update an existing pet
            description: Update an existing pet by Id
            operationId: updatePet
            requestBody:
                description: Update an existent pet assigned to designated tutor
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Pet"
                required: true
            responses:
                "200":
                    description: Successful operation
                "400":
                    description: Bad Request
                "404":
                    description: Content not found
        parameters:
            - name: petId
              in: path
              description: id of pet to use
              required: true
              schema:
                  type: integer
                  minimum: 1
              style: simple

            - name: tutorId
              in: path
              description: id of tutor to use
              required: true
              schema:
                  type: integer
              style: simple

        delete:
            tags:
                - Pets
            summary: Deletes a pet
            description: Delete an existing pet
            operationId: deletePet
            parameters:
                - name: petId
                  in: path
                  description: Pet id to delete pet
                  required: true
                  schema:
                      type: integer
                      format: int64

                - name: tutorId
                  in: path
                  description: Tutor id to delete
                  required: true
                  schema:
                      type: integer
                      format: int64
            responses:
                "200":
                    description: Successful operation
                "400":
                    description: Bad request
                "404":
                    description: Content not found

components:
    schemas:
        Pet:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                    example: 1
                name:
                    type: string
                    example: Tobias
                species:
                    type: string
                    example: Dog
                carry:
                    type: string
                    example: p
                    enum:
                        - "p"
                        - "m"
                        - "g"
                weight:
                    type: integer
                    format: int32
                    example: 25
                date_of_birth:
                    type: string
                    example: 2000-10-10 10:10
        Tutor:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                    example: 1
                name:
                    type: string
                    example: Jon
                phone:
                    type: string
                    example: 88997531235
                email:
                    type: string
                    example: test@test.com
                date_of_birth:
                    type: string
                    example: 2000-10-10 10:10
                zip_code:
                    type: string
                    example: 63587111

        TutorComplete:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                    example: 1
                name:
                    type: string
                    example: Jon
                phone:
                    type: string
                    example: 88997531235
                email:
                    type: string
                    example: test@test.com
                date_of_birth:
                    type: string
                    example: 2000-10-10 10:10
                zip_code:
                    type: string
                    example: 63587111
                pets:
                    type: array
                    items:
                        $ref: "#/components/schemas/Pet"
    requestBodies:
        Tutor:
            description: Tutor object that needs to be created/updated
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/Tutor"
        Pet:
            description: Pet object that needs to be created/updated
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/Pet"
